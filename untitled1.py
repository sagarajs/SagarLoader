# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BOCeVz_aQu1Mnsrb8kLhcsvW7Evs2FG7

NAME: SAGAR KUMAR JAISWAL
USN NO: 23BTRCA005
BRANCH: CSE-A.I
"""

from scipy.stats import rv_discrete
import numpy as np
x = np.arange(5)
x
p_x = [0.1,0.4,0.3,0.1,0.1]
X = rv_discrete(name='X', values=(x,p_x))
print(X.pmf(x))
print(X.pmf(2))
print(X.cdf(x))

import matplotlib.pyplot as plt
fig, ax=plt.subplots(1,1)
ax.plot(x,X.pmf(x),'ro',ms=12,mec='r')
ax.vlines(x,0,X.pmf(x),colors='r',lw=4)
plt.show()

from scipy.stats import rv_discrete
import numpy as np
x = np.arange(5)
P_x = [1/16,4/16,6/16,4/16,1/16]
X=rv_discrete(name='X',values =(x,P_x))
print(X.pmf(x))
print(X.pmf(2))
print(X.cdf(x))

import matplotlib.pyplot as plt
fig, ax=plt.subplots(1,1)
ax.plot(x,X.pmf(x),'ro',ms=12,mec='g')
ax.vlines(x,0,X.pmf(x),colors='g',lw=4)
plt.show()

from scipy.stats import binom
import matplotlib.pyplot as plt
n=6
p=0.6
r_values = list(range(n+1))
mean,var = binom.stats(n,p)
dist = [binom.pmf(r,n,p) for r in r_values]
print("r\tp(r)")
for i in range(n+1):
  print(str(r_values[i]) + "\t" + str(dist[i]))
print("mean = " + str(mean))
print("variance = " + str(var))
plt.bar(r_values,dist)
plt.show()

from scipy.stats import binom
import matplotlib.pyplot as plt
n=6
p=0.5
r_values = list(range(n+1))
mean,var = binom.stats(n,p)
dist = [binom.pmf(r,n,p) for r in r_values]
print("r\tp(r)")
for i in range(n+1):
  print(str(r_values[i]) + "\t" + str(dist[i]))
print("mean = " + str(mean))
print("variance = " + str(var))
plt.bar(r_values,dist)
plt.show()

from scipy import stats
stats.binom.pmf(5,12,1/4)

from scipy import stats
sum(stats.binom.pmf([7,8,9,10,11,12],12,1/4))

from scipy import stats
sum(stats.binom.pmf([1,2,3,4,5,6],12,1/4))

from scipy.stats import poisson
poisson.pmf(k=5,mu=3)

from scipy.stats import poisson
poisson.cdf(k=4,mu=7)

from scipy.stats import poisson
1-poisson.cdf(k=15,mu=20)

from scipy.stats import poisson
import matplotlib.pyplot as plt
x = poisson.rvs(mu=3, size=10000)
plt.hist(x, density=True, edgecolor='black')

from numpy.random import normal
import numpy as np
import matplotlib.pyplot as plt
data = normal(loc=0, scale=1, size=200)
np.mean(data)
np.std(data, ddof=1)
plt.hist(data, 30)
plt.show()

import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm
x = np.arange(-3, 3, 0.001)
plt.plot(x, norm.pdf(x, 0, 1), color='red', linewidth=3)

import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm
x = np.arange(-5, 5, 0.001)
plt.plot(x, norm.pdf(x, 0, 1), label='μ: 0, σ: 1')
plt.plot(x, norm.pdf(x, 0, 1.5), label='μ:0, σ: 1.5')
plt.plot(x, norm.pdf(x, 0, 2), label='μ:0, σ: 2')
plt.legend(title='Parameters')

import scipy.stats
1-(scipy.stats.norm(12, 3).cdf(15) )

import scipy.stats
scipy.stats.norm(12, 3).cdf(6)

import scipy.stats
scipy.stats.norm(12, 3).cdf(14) - scipy.stats.norm(12,3).cdf(10)

import scipy.stats
scipy.stats.norm(10, 4).cdf(15) - scipy.stats.norm(10,4).cdf(12)

import scipy.stats
1-(scipy.stats.norm(10, 4).cdf(7) )

from scipy.stats import rv_discrete
import numpy as np
x = np.arange(5)
P_x = [1/16, 4/16, 6/16, 4/16, 1/16]
X = rv_discrete(name='X', values=(x, P_x))
print(X.pmf(x))
print(X.pmf(2))
print(X.cdf(x))

"""Answer 1"""

from scipy.stats import rv_discrete
 import numpy as np
 x = np.arange(7)
 P_x = [1/64, 3/32, 15/64, 20/64, 15/64, 3/32, 1/64]
 X = rv_discrete(name='x', values=(x, P_x))
 print(X.pmf(x))
 print(X.cdf(x))
 import matplotlib.pyplot as plt
 fig, ax = plt.subplots(1, 1)
 ax.plot(x, X.pmf(x), 'ro', ms=12, mec='r')
 ax.vlines(x, 0, X.pmf(x), colors='r', lw=4)
 plt.show()

"""Answer 2"""

from scipy import stats
 sum(stats.binom.pmf([1,2,3,4,5,6], 6, 2/3))

"""Answer 3"""

from scipy.stats import poisson
 A = poisson.cdf(k=0, mu=1.8)
 B = poisson.cdf(k=1, mu=1.8)
 C = 1-poisson.cdf(k=0, mu=1.8)
 print(A)
 print(B)
 print(C)

"""Answer 4"""

from numpy.random import normal
import numpy as np
import matplotlib.pyplot as plt
data = normal(loc=0, scale=1, size=500)
np.mean(data)
np.std(data, ddof=1)
plt.hist(data, 30)
plt.show()

"""Answer 5"""

import scipy.stats
A = 1-(scipy.stats.norm(30, 5).cdf(45))
B = scipy.stats.norm(30, 5).cdf(40) - scipy.stats.norm(30, 5).cdf(26)
print(A)
print(B)

"""Answer 6"""

import scipy.stats
1-(scipy.stats.norm(2040, 40).cdf(2140))

import scipy.stats
scipy.stats.norm(2040, 40).cdf(2160) - scipy.stats.norm(2040,40).cdf(2120)